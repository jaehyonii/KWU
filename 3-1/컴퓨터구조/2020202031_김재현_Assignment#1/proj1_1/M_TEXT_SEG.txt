001111_00000_00010_0001001000110100 // lui $2, 0x1234
001101_00010_00011_0101011001111000 // ori $3, $2, 0x5678
001111_00000_00100_0001000100100010 // lui $4, 0x1122
001101_00100_00101_0011001101000100 // ori $5, $4, 0x3344
001101_00100_00110_0011001101000100 // ori $6, $4, 0x3344
// $2: 0x12340000   $3: 0x12345678    $4: 0x11220000    $5: 0x11223344    $6: 0x11223344

// store result from $7 ~
001110_00011_00111_1010101111001101 // xori $7, $3, 0xabcd
// $7: 0x1234FDB5

000000_00011_00101_01000_xxxxx_101010 // slt $8, $3, $5
// $8: 0x00000000

000000_00101_00011_01001_xxxxx_101010 // slt $9, $5, $3
// $9: 0x00000001

000000_00101_00110_01010_xxxxx_101010 // slt $10, $5, $6
// $10: 0x00000000

000000_00011_00101_01011_xxxxx_100011 // subu $11, $3, $5
// $11: 0x01122334

000000_00101_00011_01100_xxxxx_100011 // subu $12, $5, $3
// $12: 0xfeeddccc

000000_00101_00110_01101_xxxxx_100011 // subu $13, $5, $6
// $13: 0x00000000

000000_xxxxx_00011_01110_00000_000011 // sra $14, $3, 0
// $14: 0x12345678

000000_xxxxx_00011_01111_00101_000011 // sra $15, $3, 5
// $15: 0x0091A2B3

000000_00011_00101_xxxxx_xxxxx_011001 // multu $3, $5
// hi: 0x0137E856   lo: B710DFE0

000000_xxxxx_xxxxx_10000_xxxxx_010010 // mflo $16
// $16: 0xB710DFE0

001111_00000_00100_1111000100100010 // lui $4, 0xF122
// $4: 0xF1220000

001101_00100_00101_0011001101000100 // ori $5, $4, 0x3344
// $5: 0xF1223344
// $2: 0x12340000   $3: 0x12345678    $4: 0xF1220000    $5: 0xF1223344    $6: 0x11223344

000000_00011_00101_xxxxx_xxxxx_011001 // multu $3, $5
// hi: 0x1125B3FF   lo: 0xB710DFE0

000000_xxxxx_xxxxx_10001_xxxxx_010010 // mflo $17
// $17: 0xB710DFE0

101000_00010_10001_0000000001100100// sb $17, 100($2)
// MEM[0x12340064] = E0

101011_00010_00011_0000000001101000// sw $3, 104($2)
// MEM[0x12340068] = 78_56_34_12

100101_00010_10010_0000000001101000 // lhu $18, 104($2)
// $18: 00005678

000000_00011_00101_00110_xxxxx_101010 // slt $6, $3, $5
// $2: 0x12340000   $3: 0x12345678    $4: 0xF1220000    $5: 0xF1223344    $6: 0x00000000

000110_00100_xxxxx_0000000000000010 // blez $4, +2
// pc += (4 + 2 << 2)

000000_xxxxx_xxxxx_xxxxx_xxxxx_001101 // break

000110_00110_xxxxx_0000000000000011 // blez $6, 3
// pc += (4 + 3 << 2)

000110_00011_xxxxx_1111111111111111 // blez $3, -1
// pc += 4

000110_00110_xxxxx_1111111111111101 // blez $6, -3
// pc += (4 + -3 << 2)

000000_xxxxx_xxxxx_xxxxx_xxxxx_001101 // break

000000_00110_xxxxx_xxxxx_xxxxx_001000 // jr $6
// PC = 0